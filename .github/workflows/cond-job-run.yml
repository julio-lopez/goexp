name: Cond test
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main, ci-test, linux-ci ]
    tags:
      - v*
  workflow_dispatch:
    inputs:
      ref:
        description: 'branch or git ref to use for the build'
        required: true
        default: 'main'

env:
  # environment variables shared between build steps
  # do not include sensitive credentials and tokens here, instead pass them
  # directly to tools that need them to limit the blast radius in case one of them
  # becomes compromised and leaks credentials to external sites.
  # required by Makefile
  UNIX_SHELL_ON_WINDOWS: true
  # set to true if Publish Artifacts should run
  PUBLISH_ARTIFACTS: ${{ secrets.PUBLISH_ARTIFACTS }}
  # where to publish releases for non-tagged commits
  NON_TAG_RELEASE_REPO: ${{ secrets.NON_TAG_RELEASE_REPO }}
  # RPM and APT packages GCS bucket/hostname.
  PACKAGES_HOST: ${{ secrets.PACKAGES_HOST }}
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      publish_artifacts: ${{ steps.check.outputs.publish_artifacts }}
    steps:
    -
      name: Basic Metadata
      id: metadata
      run: |
        echo "event: ${{ github.event_name }}"
        echo "os: ${{ runner.os }}"
        echo "branch: ${{ github.ref }}"
        echo "ref_name: ${{ github.ref_name }}"
        echo "repository: ${{ github.repository }}"
        echo "workspace dir: ${{ github.workspace }}"
        echo "input ref: ${{ github.event.inputs.ref }}"
        echo "target ref:" $${{ github.event.inputs.ref || github.ref }}
        echo "targetRef=$${{ github.event.inputs.ref || github.ref }}" >> $GITHUB_OUTPUT
        echo "steps.metadata.outputs.imageVersion:${{ steps.metadata.outputs.imageVersion }}"
        echo "imageVersion=some-version-foo" >> $GITHUB_OUTPUT
        echo "steps.metadata.outputs.imageVersion:${{ steps.metadata.outputs.imageVersion }}"
    -
      name: Check out repository
      uses: actions/checkout@v3
      with:
        ref: $${{ steps.metadata.outputs.targetRef }}
      #  ref: $${{ github.event.inputs.ref || github.ref }}

    -
      id: check
      name: Set publish artifacts
      if: env.PUBLISH_ARTIFACTS
      run: echo "publish_artifacts=1" >> $GITHUB_OUTPUT
    -
      name: job outputs
      run: |
        echo "metadata.outputs:${{ toJSON(steps.metadata.outputs) }}"
        echo "check.outputs:${{ toJSON(steps.check.outputs) }}"
  publish:
    name: Stage And Publish Artifacts
    runs-on: ubuntu-latest
    needs: build
    if: false && needs.build.outputs.publish_artifacts != null
    steps:
    - run: |
        echo "build outputs:${{ toJSON(needs.build.outputs) }}"
        echo "ran"
